{
  "_format": "hh-sol-artifact-1",
  "contractName": "AnonAadhaarCredentialIssuerImplV1",
  "sourceName": "contracts/verifiers/AnonAadhaarCredentialIssuerImplV1.sol",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "ERC1967InvalidImplementation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1967NonPayable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAnonAadhaarProof",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "provided",
          "type": "uint256"
        }
      ],
      "name": "InvalidExpirationDate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidHashIndex",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidHashValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidIssuerDidHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNullifierSeed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPubKeyHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedLength",
          "type": "uint256"
        }
      ],
      "name": "InvalidResponsesLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidStateContractAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTemplateRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVerifierAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoVerifierSet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullifierAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullifierDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProofExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UUPSUnauthorizedCallContext",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "slot",
          "type": "bytes32"
        }
      ],
      "name": "UUPSUnsupportedProxiableUUID",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "issuerDidHash",
          "type": "uint256"
        }
      ],
      "name": "IssuerDidHashUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nullifier",
          "type": "uint256"
        }
      ],
      "name": "NullifierCleaned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "publicKeyHash",
          "type": "uint256"
        }
      ],
      "name": "PublicKeyHashAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "templateRoot",
          "type": "uint256"
        }
      ],
      "name": "TemplateRootUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UPGRADE_INTERFACE_VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "publicKeyHash",
          "type": "uint256"
        }
      ],
      "name": "addPublicKeyHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "publicKeysHashes",
          "type": "uint256[]"
        }
      ],
      "name": "addPublicKeyHashesBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nullifier",
          "type": "uint256"
        }
      ],
      "name": "cleanNullifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimIndexHash",
          "type": "uint256"
        }
      ],
      "name": "getClaimProof",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimIndexHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "getClaimProofByRoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimIndexHash",
          "type": "uint256"
        }
      ],
      "name": "getClaimProofWithStateInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "state",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "revocationsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootsRoot",
              "type": "uint256"
            }
          ],
          "internalType": "struct IdentityLib.StateInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClaimsTreeRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpirationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsOldStateGenesis",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPublishedClaimsRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPublishedRevocationsRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPublishedRootsRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPublishedState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNullifierSeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "revocationNonce",
          "type": "uint64"
        }
      ],
      "name": "getRevocationProof",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "revocationNonce",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "getRevocationProofByRoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "revocationNonce",
          "type": "uint64"
        }
      ],
      "name": "getRevocationProofWithStateInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "state",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "revocationsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootsRoot",
              "type": "uint256"
            }
          ],
          "internalType": "struct IdentityLib.StateInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "name": "getRevocationStatus",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "state",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimsTreeRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "revocationTreeRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rootOfRoots",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IOnchainCredentialStatusResolver.IdentityStateRoots",
              "name": "issuer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IOnchainCredentialStatusResolver.Proof",
              "name": "mtp",
              "type": "tuple"
            }
          ],
          "internalType": "struct IOnchainCredentialStatusResolver.CredentialStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "state",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "name": "getRevocationStatusByIdAndState",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "state",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimsTreeRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "revocationTreeRoot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rootOfRoots",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IOnchainCredentialStatusResolver.IdentityStateRoots",
              "name": "issuer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "existence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "siblings",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "auxExistence",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "auxIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "auxValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IOnchainCredentialStatusResolver.Proof",
              "name": "mtp",
              "type": "tuple"
            }
          ],
          "internalType": "struct IOnchainCredentialStatusResolver.CredentialStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRevocationsTreeRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rootsTreeRoot",
          "type": "uint256"
        }
      ],
      "name": "getRootProof",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimsTreeRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "getRootProofByRoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rootsTreeRoot",
          "type": "uint256"
        }
      ],
      "name": "getRootProofWithStateInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "existence",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "siblings",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "auxExistence",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "auxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auxValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct SmtLib.Proof",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "state",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "revocationsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootsRoot",
              "type": "uint256"
            }
          ],
          "internalType": "struct IdentityLib.StateInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "state",
          "type": "uint256"
        }
      ],
      "name": "getRootsByState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "claimsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "revocationsRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rootsRoot",
              "type": "uint256"
            }
          ],
          "internalType": "struct IdentityLib.Roots",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRootsTreeRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSmtDepth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTemplateRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stateContractAddr",
          "type": "address"
        },
        {
          "internalType": "bytes2",
          "name": "idType",
          "type": "bytes2"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nullifierSeed",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "publicKeysHashes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "expirationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "templateRoot",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "anonAadhaarVerifier",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stateContractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes2",
          "name": "idType",
          "type": "bytes2"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "publicKeyHash",
          "type": "uint256"
        }
      ],
      "name": "publicKeyHashExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issuerDidHash",
          "type": "uint256"
        }
      ],
      "name": "setIssuerDidHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "templateRoot",
          "type": "uint256"
        }
      ],
      "name": "setTemplateRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "zkProof",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct IZKPVerifier.ZKPResponse[]",
          "name": "responses",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "crossChainProofs",
          "type": "bytes"
        }
      ],
      "name": "submitZKPResponseV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612ffd6100fd60003960008181611b5201528181611b7b0152611cfb0152612ffd6000f3fe6080604052600436106102665760003560e01c8063715018a611610144578063c1e32733116100b6578063e23a845a1161007a578063e23a845a1461076f578063e26ecb0b146107a3578063e30c3978146107c3578063f2fde38b146107d8578063f84c7c1e146107f8578063ffa1ad741461080d57600080fd5b8063c1e32733146106e5578063c6365a3b14610705578063d49d5cdc1461071a578063d94b02711461073a578063da68a0b11461075a57600080fd5b8063ad3cb1cc11610108578063ad3cb1cc146105e5578063ade09fcd14610623578063b354c2d814610643578063b37feda414610663578063b57a40cb14610683578063b8db6871146106a357600080fd5b8063715018a61461055957806379ba50971461056e5780638da5cb5b146105835780639674cfa4146105b0578063aad72921146105c557600080fd5b80633df432fc116101dd5780634f1ef286116101a15780634f1ef28614610498578063523b8136146104ab57806352d1902d146104c0578063552c9b7e146104d557806358ada672146104f55780635d1ca6311461054457600080fd5b80633df432fc1461040f5780633f0c664814610424578063406e8b4c14610438578063443d7534146104585780634c240f341461047857600080fd5b806313e52ae71161022f57806313e52ae71461034457806326485063146103595780632c1d3204146103865780632d5c4f25146103ba578063310d0d5b146103da5780633d59ec60146103fa57600080fd5b806233058d1461026b57806301c85c77146102a257806301ffc9a7146102c5578063035dfdfe146102f5578063110c96a714610317575b600080fd5b34801561027757600080fd5b5061028b610286366004612432565b61083e565b6040516102999291906124ef565b60405180910390f35b3480156102ae57600080fd5b506102b761090b565b604051908152602001610299565b3480156102d157600080fd5b506102e56102e0366004612532565b610990565b6040519015158152602001610299565b34801561030157600080fd5b5061031561031036600461255c565b6109c7565b005b34801561032357600080fd5b50610337610332366004612575565b610a58565b60405161029991906125a1565b34801561035057600080fd5b506102b7610a83565b34801561036557600080fd5b50610379610374366004612432565b610a9b565b60405161029991906125ee565b34801561039257600080fd5b507fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749702546102b7565b3480156103c657600080fd5b506103796103d5366004612601565b610b34565b3480156103e657600080fd5b506103796103f5366004612601565b610bd3565b34801561040657600080fd5b506102b7610c2a565b34801561041b57600080fd5b506102b7610c3d565b34801561043057600080fd5b5060286102b7565b34801561044457600080fd5b50610315610453366004612652565b610c80565b34801561046457600080fd5b5061028b61047336600461255c565b610d1d565b34801561048457600080fd5b5061031561049336600461255c565b610d98565b6103156104a636600461277c565b610e04565b3480156104b757600080fd5b506102b7610e23565b3480156104cc57600080fd5b506102b7610e36565b3480156104e157600080fd5b506103156104f0366004612814565b610e53565b34801561050157600080fd5b506102e561051036600461255c565b60009081527fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749705602052604090205460ff1690565b34801561055057600080fd5b506102b7610f22565b34801561056557600080fd5b50610315610f2c565b34801561057a57600080fd5b50610315610f40565b34801561058f57600080fd5b50610598610f8d565b6040516001600160a01b039091168152602001610299565b3480156105bc57600080fd5b506102b7610fc2565b3480156105d157600080fd5b506103376105e0366004612855565b610fd5565b3480156105f157600080fd5b50610616604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161029991906128ae565b34801561062f57600080fd5b5061031561063e366004612904565b6111ee565b34801561064f57600080fd5b5061031561065e36600461255c565b6114c5565b34801561066f57600080fd5b5061028b61067e36600461255c565b611539565b34801561068f57600080fd5b5061037961069e36600461255c565b6115b4565b3480156106af57600080fd5b506106c36106be36600461255c565b611602565b6040805182518152602080840151908201529181015190820152606001610299565b3480156106f157600080fd5b5061037961070036600461255c565b6116aa565b34801561071157600080fd5b506102b76116fa565b34801561072657600080fd5b50610315610735366004612a4c565b61170d565b34801561074657600080fd5b5061031561075536600461255c565b611905565b34801561076657600080fd5b506102b76119bd565b34801561077b57600080fd5b507fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749701546102b7565b3480156107af57600080fd5b506103796107be366004612adc565b611a00565b3480156107cf57600080fd5b50610598611a5f565b3480156107e457600080fd5b506103156107f3366004612b06565b611a88565b34801561080457600080fd5b506102e5611b0d565b34801561081957600080fd5b50610616604051806040016040528060058152602001640312e302e360dc1b81525081565b610846612341565b6108716040518060800160405280600081526020016000815260200160008152602001600081525090565b610879611b23565b604051631f17004d60e31b815260048101919091526001600160401b038416602482015273__$068aad146bf104111ba65c4a1de2cd0e23$__9063f8b80268906044015b600060405180830381865af41580156108da573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109029190810190612c37565b91509150915091565b6000610915611b23565b60405163765c2c6160e01b8152600481019190915273__$068aad146bf104111ba65c4a1de2cd0e23$__9063765c2c61906024015b602060405180830381865af4158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190612cdb565b905090565b60006001600160e01b03198216635d1ca63160e01b14806109c157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6109cf611b47565b6109d7611bec565b60008181527fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa7497056020908152604091829020805460ff191660011790559051828152600080516020612f88833981519152917f192522987419be1c06ca88238df20a35b84c7a5025bbf1e244fac876d2d320ee91015b60405180910390a15050565b610a6061238a565b6000610a6a611b23565b600101549050610a7b848285610fd5565b949350505050565b6000600080516020612f888339815191525b54919050565b610aa3612341565b610aab611b23565b604051637d0aba4f60e01b815260048101919091526001600160401b038316602482015273__$068aad146bf104111ba65c4a1de2cd0e23$__90637d0aba4f906044015b600060405180830381865af4158015610b0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c19190810190612cf4565b610b3c612341565b610b44611b23565b60405163d55da6a360e01b81526004810191909152602481018490526044810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__9063d55da6a3906064015b600060405180830381865af4158015610ba4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bcc9190810190612cf4565b9392505050565b610bdb612341565b610be3611b23565b604051636ac0c5c760e11b81526004810191909152602481018490526044810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__9063d5818b8e90606401610b87565b6000610c34611b23565b60010154919050565b6000610c47611b23565b604051631b8bf99b60e21b8152600481019190915273__$068aad146bf104111ba65c4a1de2cd0e23$__90636e2fe66c9060240161094a565b610c88611b23565b6040516359a6069160e01b815260048101919091526001600160a01b0383166024820152306044820152602860648201526001600160f01b03198216608482015273__$068aad146bf104111ba65c4a1de2cd0e23$__906359a606919060a4015b60006040518083038186803b158015610d0157600080fd5b505af4158015610d15573d6000803e3d6000fd5b505050505050565b610d25612341565b610d506040518060800160405280600081526020016000815260200160008152602001600081525090565b610d58611b23565b60405163a3018d7960e01b815260048101919091526024810184905273__$068aad146bf104111ba65c4a1de2cd0e23$__9063a3018d79906044016108bd565b610da0611bec565b7fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749703819055604051818152600080516020612f88833981519152907fb69b4c35c29def0ac05e4ac2258986b58de5ae03feeea1802c95f4e0b5794cf190602001610a4c565b610e0c611b47565b610e1582611c1e565b610e1f8282611c2e565b5050565b6000610e2d611b23565b609a0154919050565b6000610e40611cf0565b50600080516020612fa883398151915290565b610e5b611b47565b610e63611bec565b600080516020612f8883398151915260005b82811015610f1c576001826005016000868685818110610e9757610e97612d28565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055507f192522987419be1c06ca88238df20a35b84c7a5025bbf1e244fac876d2d320ee848483818110610ef657610ef6612d28565b90506020020135604051610f0c91815260200190565b60405180910390a1600101610e75565b50505050565b6000610a95611b23565b610f34611bec565b610f3e6000611d39565b565b3380610f4a611a5f565b6001600160a01b031614610f815760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b610f8a81611d39565b50565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b6000610fcc611b23565b609b0154919050565b610fdd61238a565b610fe5611b23565b54841461102b5760405162461bcd60e51b8152602060048201526014602482015273092c8cadce8d2e8f240d2c840dad2e6dac2e8c6d60631b6044820152606401610f78565b6000611035611b23565b604051630b1a9cd360e01b815260048101919091526024810185905273__$068aad146bf104111ba65c4a1de2cd0e23$__90630b1a9cd390604401606060405180830381865af415801561108d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b19190612d3e565b6040805160808101825286815282516020808301919091528301518183015290820151606082015290915060006110e6611b23565b6020840151604051630b2bcd1b60e11b815260048101929092526001600160401b0387166024830152604482015273__$068aad146bf104111ba65c4a1de2cd0e23$__906316579a3690606401600060405180830381865af4158015611150573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111789190810190612cf4565b6040805161010081018252825181526020808401511515818301528284015182840152606080850151908301526080808501519083015260a08085015115159083015260c0808501519083015260e093840151938201939093528151808301909252938152908101929092525095945050505050565b815160011461121d578151604051630264a11560e21b8152600481019190915260016024820152604401610f78565b6000806000808560008151811061123657611236612d28565b6020026020010151602001518060200190518101906112559190612dcd565b9350935093509350600060405180608001604052808581526020018481526020018381526020016040518061014001604052808860008151811061129b5761129b612d28565b60200260200101518152602001886001815181106112bb576112bb612d28565b60200260200101518152602001886002815181106112db576112db612d28565b60200260200101518152602001886003815181106112fb576112fb612d28565b602002602001015181526020018860048151811061131b5761131b612d28565b602002602001015181526020018860058151811061133b5761133b612d28565b602002602001015181526020018860068151811061135b5761135b612d28565b602002602001015181526020018860078151811061137b5761137b612d28565b602002602001015181526020018860088151811061139b5761139b612d28565b60200260200101518152602001886009815181106113bb576113bb612d28565b6020026020010151815250815250905060006113e2600080516020612f8883398151915290565b60048101549091506001600160a01b031680611411576040516301dcf1ab60e31b815260040160405180910390fd5b806001600160a01b031663f3bb70f684600001518560200151866040015187606001516040518563ffffffff1660e01b81526004016114539493929190612eaa565b602060405180830381865afa158015611470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114949190612f2f565b6114b15760405163b4b32e6f60e01b815260040160405180910390fd5b6114ba83611d71565b505050505050505050565b6114cd611b47565b6114d5611bec565b7fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749702819055604051818152600080516020612f88833981519152907ff007a02ba428e63fa98b65269e70f9a9db847e0a839049a2f31f06928226773490602001610a4c565b611541612341565b61156c6040518060800160405280600081526020016000815260200160008152602001600081525090565b611574611b23565b604051636ad1d8a760e11b815260048101919091526024810184905273__$068aad146bf104111ba65c4a1de2cd0e23$__9063d5a3b14e906044016108bd565b6115bc612341565b6115c4611b23565b604051620cf08960e41b815260048101919091526024810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__9062cf089090604401610aef565b61162660405180606001604052806000815260200160008152602001600081525090565b61162e611b23565b604051630b1a9cd360e01b815260048101919091526024810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__90630b1a9cd390604401606060405180830381865af4158015611686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c19190612d3e565b6116b2612341565b6116ba611b23565b6040516397ac539160e01b815260048101919091526024810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__906397ac539190604401610aef565b6000611704611b23565b609c0154919050565b6000611717611e19565b805490915060ff600160401b82041615906001600160401b031660008115801561173e5750825b90506000826001600160401b0316600114801561175a5750303b155b905081158015611768575080155b156117865760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156117b057845460ff60401b1916600160401b1785555b6001600160a01b0388166117d75760405163043103a360e21b815260040160405180910390fd5b6001600160a01b0387166117fe57604051637eb887b360e01b815260040160405180910390fd5b6118088787610c80565b61181133611e42565b600080516020612f888339815191528d81557fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa7497018b90557fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa7497028a90557fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa74970480546001600160a01b0319166001600160a01b038b161790556118af8d8d610e53565b5083156118f657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b61190d611b47565b611915611bec565b60008181527fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa7497066020526040902054600080516020612f888339815191529060ff16611973576040516327522baf60e01b815260040160405180910390fd5b600082815260068201602052604090819020805460ff19169055517fcc6269876e2c1958f569ca2e926ed364e2965636d111ad426270b6855f5a7e6a90610a4c9084815260200190565b60006119c7611b23565b604051631e75e7f360e01b8152600481019190915273__$068aad146bf104111ba65c4a1de2cd0e23$__90631e75e7f39060240161094a565b611a08612341565b611a10611b23565b604051630b2bcd1b60e11b815260048101919091526001600160401b03841660248201526044810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__906316579a3690606401610b87565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610fb2565b611a90611bec565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255611ad4610f8d565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6000611b17611b23565b6002015460ff16919050565b7f3018a310c36c4f8228f09bf3b1822685cf0971daa8265a58ca807c4a4daba40090565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611bce57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611bc2600080516020612fa8833981519152546001600160a01b031690565b6001600160a01b031614155b15610f3e5760405163703e46dd60e11b815260040160405180910390fd5b33611bf5610f8d565b6001600160a01b031614610f3e5760405163118cdaa760e01b8152336004820152602401610f78565b611c26611b47565b610f8a611bec565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611c88575060408051601f3d908101601f19168201909252611c8591810190612cdb565b60015b611cb057604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610f78565b600080516020612fa88339815191528114611ce157604051632a87526960e21b815260048101829052602401610f78565b611ceb8383611e53565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f3e5760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610e1f82611ea9565b60608181015180516020820151604083015193830151608084015160a085015160c086015160e0870151610100880151610120909801519698959795969495939492939192909190611dca88888b8d888b8b8989611f1a565b60008981527fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa74970660205260409020805460ff19166001179055611e0c8888612096565b5050505050505050505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006109c1565b611e4a612151565b610f8a81612176565b611e5c826121a8565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611ea157611ceb828261220d565b610e1f612283565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080516020612f8883398151915260008a9003611f4b57604051634978c15760e11b815260040160405180910390fd5b88600003611f6c57604051639d34ba4f60e01b815260040160405180910390fd5b80548614611f8d5760405163d2cee05560e01b815260040160405180910390fd5b80600201548314611fb1576040516381d6039360e01b815260040160405180910390fd5b80600301548214611fd55760405163fe0c887b60e01b815260040160405180910390fd5b6000816001015486611fe79190612f4a565b905080851461201357604051633abb8c7960e11b81526004810182905260248101869052604401610f78565b4285116120335760405163b67a771360e01b815260040160405180910390fd5b600088815260058301602052604090205460ff16612064576040516356b6133160e11b815260040160405180910390fd5b600089815260068301602052604090205460ff1615611e0c57604051639338373760e01b815260040160405180910390fd5b61209e611b23565b6040516306fb157560e01b81526004810191909152602481018390526044810182905273__$068aad146bf104111ba65c4a1de2cd0e23$__906306fb15759060640160006040518083038186803b1580156120f857600080fd5b505af415801561210c573d6000803e3d6000fd5b50505050612118611b23565b60405163175ba3e960e11b8152600481019190915273__$068aad146bf104111ba65c4a1de2cd0e23$__90632eb747d290602401610ce9565b6121596122a2565b610f3e57604051631afcd79f60e31b815260040160405180910390fd5b61217e612151565b6001600160a01b038116610f8157604051631e4fbdf760e01b815260006004820152602401610f78565b806001600160a01b03163b6000036121de57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610f78565b600080516020612fa883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161222a9190612f6b565b600060405180830381855af49150503d8060008114612265576040519150601f19603f3d011682016040523d82523d6000602084013e61226a565b606091505b509150915061227a8583836122bc565b95945050505050565b3415610f3e5760405163b398979f60e01b815260040160405180910390fd5b60006122ac611e19565b54600160401b900460ff16919050565b6060826122d1576122cc82612318565b610bcc565b81511580156122e857506001600160a01b0384163b155b1561231157604051639996b31560e01b81526001600160a01b0385166004820152602401610f78565b5080610bcc565b8051156123285780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6040518061010001604052806000815260200160001515815260200160608152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60405180604001604052806123c06040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020016124116040518061010001604052806000815260200160001515815260200160608152602001600081526020016000815260200160001515815260200160008152602001600081525090565b905290565b80356001600160401b038116811461242d57600080fd5b919050565b60006020828403121561244457600080fd5b610bcc82612416565b805182526020808201511515818401526040808301516101009185018290528051918501829052600092019082906101208601905b808310156124a55783518252602082019150602084019350600183019250612482565b50606085015160608701526080850151608087015260a085015192506124cf60a087018415159052565b60c085015160c087015260e085015160e087015280935050505092915050565b60a08152600061250260a083018561244d565b9050610bcc6020830184805182526020810151602083015260408101516040830152606081015160608301525050565b60006020828403121561254457600080fd5b81356001600160e01b031981168114610bcc57600080fd5b60006020828403121561256e57600080fd5b5035919050565b6000806040838503121561258857600080fd5b8235915061259860208401612416565b90509250929050565b602081526125d4602082018351805182526020810151602083015260408101516040830152606081015160608301525050565b6000602083015160a080840152610a7b60c084018261244d565b602081526000610bcc602083018461244d565b6000806040838503121561261457600080fd5b50508035926020909101359150565b80356001600160a01b038116811461242d57600080fd5b80356001600160f01b03198116811461242d57600080fd5b6000806040838503121561266557600080fd5b61266e83612623565b91506125986020840161263a565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156126b4576126b461267c565b60405290565b60405161010081016001600160401b03811182821017156126b4576126b461267c565b604051601f8201601f191681016001600160401b03811182821017156127055761270561267c565b604052919050565b600082601f83011261271e57600080fd5b81356001600160401b038111156127375761273761267c565b61274a601f8201601f19166020016126dd565b81815284602083860101111561275f57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561278f57600080fd5b61279883612623565b915060208301356001600160401b038111156127b357600080fd5b6127bf8582860161270d565b9150509250929050565b60008083601f8401126127db57600080fd5b5081356001600160401b038111156127f257600080fd5b6020830191508360208260051b850101111561280d57600080fd5b9250929050565b6000806020838503121561282757600080fd5b82356001600160401b0381111561283d57600080fd5b612849858286016127c9565b90969095509350505050565b60008060006060848603121561286a57600080fd5b833592506020840135915061288160408501612416565b90509250925092565b60005b838110156128a557818101518382015260200161288d565b50506000910152565b60208152600082518060208401526128cd81604085016020870161288a565b601f01601f19169190910160400192915050565b60006001600160401b038211156128fa576128fa61267c565b5060051b60200190565b6000806040838503121561291757600080fd5b82356001600160401b0381111561292d57600080fd5b8301601f8101851361293e57600080fd5b803561295161294c826128e1565b6126dd565b8082825260208201915060208360051b85010192508783111561297357600080fd5b602084015b83811015612a2d5780356001600160401b0381111561299657600080fd5b85016060818b03601f190112156129ac57600080fd5b6129b4612692565b6129c060208301612416565b815260408201356001600160401b038111156129db57600080fd5b6129ea8c60208386010161270d565b60208301525060608201356001600160401b03811115612a0957600080fd5b612a188c60208386010161270d565b60408301525084525060209283019201612978565b50945050505060208301356001600160401b038111156127b357600080fd5b60008060008060008060008060e0898b031215612a6857600080fd5b8835975060208901356001600160401b03811115612a8557600080fd5b612a918b828c016127c9565b9098509650506040890135945060608901359350612ab160808a01612623565b9250612abf60a08a01612623565b9150612acd60c08a0161263a565b90509295985092959890939650565b60008060408385031215612aef57600080fd5b612af883612416565b946020939093013593505050565b600060208284031215612b1857600080fd5b610bcc82612623565b8051801515811461242d57600080fd5b600082601f830112612b4257600080fd5b8151612b5061294c826128e1565b8082825260208201915060208360051b860101925085831115612b7257600080fd5b602085015b83811015612b8f578051835260209283019201612b77565b5095945050505050565b60006101008284031215612bac57600080fd5b612bb46126ba565b825181529050612bc660208301612b21565b602082015260408201516001600160401b03811115612be457600080fd5b612bf084828501612b31565b6040830152506060828101519082015260808083015190820152612c1660a08301612b21565b60a082015260c0828101519082015260e09182015191810191909152919050565b60008082840360a0811215612c4b57600080fd5b83516001600160401b03811115612c6157600080fd5b612c6d86828701612b99565b9350506080601f1982011215612c8257600080fd5b50604051608081016001600160401b0381118282101715612ca557612ca561267c565b60409081526020858101518352858201519083015260608086015191830191909152608090940151938101939093525092909150565b600060208284031215612ced57600080fd5b5051919050565b600060208284031215612d0657600080fd5b81516001600160401b03811115612d1c57600080fd5b610a7b84828501612b99565b634e487b7160e01b600052603260045260246000fd5b60006060828403128015612d5157600080fd5b50612d5a612692565b82518152602080840151908201526040928301519281019290925250919050565b600082601f830112612d8c57600080fd5b612d9660406126dd565b806040840185811115612da857600080fd5b845b81811015612dc2578051845260209384019301612daa565b509095945050505050565b6000806000806101208587031215612de457600080fd5b84516001600160401b03811115612dfa57600080fd5b612e0687828801612b31565b945050612e168660208701612d7b565b925085607f860112612e2757600080fd5b6040612e32816126dd565b8060e0880189811115612e4457600080fd5b606089015b81811015612e6a57612e5b8b82612d7b565b84526020909301928401612e49565b50819550612e788a82612d7b565b94505050505092959194509250565b8060005b6002811015610f1c578151845260209384019390910190600101612e8b565b6102408101612eb98287612e87565b604082018560005b6002811015612eeb57612ed5838351612e87565b6040929092019160209190910190600101612ec1565b505050612efb60c0830185612e87565b61010082018360005b600a811015612f23578151835260209283019290910190600101612f04565b50505095945050505050565b600060208284031215612f4157600080fd5b610bcc82612b21565b808201808211156109c157634e487b7160e01b600052601160045260246000fd5b60008251612f7d81846020870161288a565b919091019291505056fecb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749700360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220cd68bc3ea18def09cb45f25f100ab47dca9932a7adf5d0dd3361d9a54386797664736f6c634300081b0033",
  "deployedBytecode": "0x6080604052600436106102665760003560e01c8063715018a611610144578063c1e32733116100b6578063e23a845a1161007a578063e23a845a1461076f578063e26ecb0b146107a3578063e30c3978146107c3578063f2fde38b146107d8578063f84c7c1e146107f8578063ffa1ad741461080d57600080fd5b8063c1e32733146106e5578063c6365a3b14610705578063d49d5cdc1461071a578063d94b02711461073a578063da68a0b11461075a57600080fd5b8063ad3cb1cc11610108578063ad3cb1cc146105e5578063ade09fcd14610623578063b354c2d814610643578063b37feda414610663578063b57a40cb14610683578063b8db6871146106a357600080fd5b8063715018a61461055957806379ba50971461056e5780638da5cb5b146105835780639674cfa4146105b0578063aad72921146105c557600080fd5b80633df432fc116101dd5780634f1ef286116101a15780634f1ef28614610498578063523b8136146104ab57806352d1902d146104c0578063552c9b7e146104d557806358ada672146104f55780635d1ca6311461054457600080fd5b80633df432fc1461040f5780633f0c664814610424578063406e8b4c14610438578063443d7534146104585780634c240f341461047857600080fd5b806313e52ae71161022f57806313e52ae71461034457806326485063146103595780632c1d3204146103865780632d5c4f25146103ba578063310d0d5b146103da5780633d59ec60146103fa57600080fd5b806233058d1461026b57806301c85c77146102a257806301ffc9a7146102c5578063035dfdfe146102f5578063110c96a714610317575b600080fd5b34801561027757600080fd5b5061028b610286366004612432565b61083e565b6040516102999291906124ef565b60405180910390f35b3480156102ae57600080fd5b506102b761090b565b604051908152602001610299565b3480156102d157600080fd5b506102e56102e0366004612532565b610990565b6040519015158152602001610299565b34801561030157600080fd5b5061031561031036600461255c565b6109c7565b005b34801561032357600080fd5b50610337610332366004612575565b610a58565b60405161029991906125a1565b34801561035057600080fd5b506102b7610a83565b34801561036557600080fd5b50610379610374366004612432565b610a9b565b60405161029991906125ee565b34801561039257600080fd5b507fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749702546102b7565b3480156103c657600080fd5b506103796103d5366004612601565b610b34565b3480156103e657600080fd5b506103796103f5366004612601565b610bd3565b34801561040657600080fd5b506102b7610c2a565b34801561041b57600080fd5b506102b7610c3d565b34801561043057600080fd5b5060286102b7565b34801561044457600080fd5b50610315610453366004612652565b610c80565b34801561046457600080fd5b5061028b61047336600461255c565b610d1d565b34801561048457600080fd5b5061031561049336600461255c565b610d98565b6103156104a636600461277c565b610e04565b3480156104b757600080fd5b506102b7610e23565b3480156104cc57600080fd5b506102b7610e36565b3480156104e157600080fd5b506103156104f0366004612814565b610e53565b34801561050157600080fd5b506102e561051036600461255c565b60009081527fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749705602052604090205460ff1690565b34801561055057600080fd5b506102b7610f22565b34801561056557600080fd5b50610315610f2c565b34801561057a57600080fd5b50610315610f40565b34801561058f57600080fd5b50610598610f8d565b6040516001600160a01b039091168152602001610299565b3480156105bc57600080fd5b506102b7610fc2565b3480156105d157600080fd5b506103376105e0366004612855565b610fd5565b3480156105f157600080fd5b50610616604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161029991906128ae565b34801561062f57600080fd5b5061031561063e366004612904565b6111ee565b34801561064f57600080fd5b5061031561065e36600461255c565b6114c5565b34801561066f57600080fd5b5061028b61067e36600461255c565b611539565b34801561068f57600080fd5b5061037961069e36600461255c565b6115b4565b3480156106af57600080fd5b506106c36106be36600461255c565b611602565b6040805182518152602080840151908201529181015190820152606001610299565b3480156106f157600080fd5b5061037961070036600461255c565b6116aa565b34801561071157600080fd5b506102b76116fa565b34801561072657600080fd5b50610315610735366004612a4c565b61170d565b34801561074657600080fd5b5061031561075536600461255c565b611905565b34801561076657600080fd5b506102b76119bd565b34801561077b57600080fd5b507fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749701546102b7565b3480156107af57600080fd5b506103796107be366004612adc565b611a00565b3480156107cf57600080fd5b50610598611a5f565b3480156107e457600080fd5b506103156107f3366004612b06565b611a88565b34801561080457600080fd5b506102e5611b0d565b34801561081957600080fd5b50610616604051806040016040528060058152602001640312e302e360dc1b81525081565b610846612341565b6108716040518060800160405280600081526020016000815260200160008152602001600081525090565b610879611b23565b604051631f17004d60e31b815260048101919091526001600160401b038416602482015273__$068aad146bf104111ba65c4a1de2cd0e23$__9063f8b80268906044015b600060405180830381865af41580156108da573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109029190810190612c37565b91509150915091565b6000610915611b23565b60405163765c2c6160e01b8152600481019190915273__$068aad146bf104111ba65c4a1de2cd0e23$__9063765c2c61906024015b602060405180830381865af4158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190612cdb565b905090565b60006001600160e01b03198216635d1ca63160e01b14806109c157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6109cf611b47565b6109d7611bec565b60008181527fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa7497056020908152604091829020805460ff191660011790559051828152600080516020612f88833981519152917f192522987419be1c06ca88238df20a35b84c7a5025bbf1e244fac876d2d320ee91015b60405180910390a15050565b610a6061238a565b6000610a6a611b23565b600101549050610a7b848285610fd5565b949350505050565b6000600080516020612f888339815191525b54919050565b610aa3612341565b610aab611b23565b604051637d0aba4f60e01b815260048101919091526001600160401b038316602482015273__$068aad146bf104111ba65c4a1de2cd0e23$__90637d0aba4f906044015b600060405180830381865af4158015610b0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c19190810190612cf4565b610b3c612341565b610b44611b23565b60405163d55da6a360e01b81526004810191909152602481018490526044810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__9063d55da6a3906064015b600060405180830381865af4158015610ba4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bcc9190810190612cf4565b9392505050565b610bdb612341565b610be3611b23565b604051636ac0c5c760e11b81526004810191909152602481018490526044810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__9063d5818b8e90606401610b87565b6000610c34611b23565b60010154919050565b6000610c47611b23565b604051631b8bf99b60e21b8152600481019190915273__$068aad146bf104111ba65c4a1de2cd0e23$__90636e2fe66c9060240161094a565b610c88611b23565b6040516359a6069160e01b815260048101919091526001600160a01b0383166024820152306044820152602860648201526001600160f01b03198216608482015273__$068aad146bf104111ba65c4a1de2cd0e23$__906359a606919060a4015b60006040518083038186803b158015610d0157600080fd5b505af4158015610d15573d6000803e3d6000fd5b505050505050565b610d25612341565b610d506040518060800160405280600081526020016000815260200160008152602001600081525090565b610d58611b23565b60405163a3018d7960e01b815260048101919091526024810184905273__$068aad146bf104111ba65c4a1de2cd0e23$__9063a3018d79906044016108bd565b610da0611bec565b7fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749703819055604051818152600080516020612f88833981519152907fb69b4c35c29def0ac05e4ac2258986b58de5ae03feeea1802c95f4e0b5794cf190602001610a4c565b610e0c611b47565b610e1582611c1e565b610e1f8282611c2e565b5050565b6000610e2d611b23565b609a0154919050565b6000610e40611cf0565b50600080516020612fa883398151915290565b610e5b611b47565b610e63611bec565b600080516020612f8883398151915260005b82811015610f1c576001826005016000868685818110610e9757610e97612d28565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055507f192522987419be1c06ca88238df20a35b84c7a5025bbf1e244fac876d2d320ee848483818110610ef657610ef6612d28565b90506020020135604051610f0c91815260200190565b60405180910390a1600101610e75565b50505050565b6000610a95611b23565b610f34611bec565b610f3e6000611d39565b565b3380610f4a611a5f565b6001600160a01b031614610f815760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b610f8a81611d39565b50565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b6000610fcc611b23565b609b0154919050565b610fdd61238a565b610fe5611b23565b54841461102b5760405162461bcd60e51b8152602060048201526014602482015273092c8cadce8d2e8f240d2c840dad2e6dac2e8c6d60631b6044820152606401610f78565b6000611035611b23565b604051630b1a9cd360e01b815260048101919091526024810185905273__$068aad146bf104111ba65c4a1de2cd0e23$__90630b1a9cd390604401606060405180830381865af415801561108d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b19190612d3e565b6040805160808101825286815282516020808301919091528301518183015290820151606082015290915060006110e6611b23565b6020840151604051630b2bcd1b60e11b815260048101929092526001600160401b0387166024830152604482015273__$068aad146bf104111ba65c4a1de2cd0e23$__906316579a3690606401600060405180830381865af4158015611150573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111789190810190612cf4565b6040805161010081018252825181526020808401511515818301528284015182840152606080850151908301526080808501519083015260a08085015115159083015260c0808501519083015260e093840151938201939093528151808301909252938152908101929092525095945050505050565b815160011461121d578151604051630264a11560e21b8152600481019190915260016024820152604401610f78565b6000806000808560008151811061123657611236612d28565b6020026020010151602001518060200190518101906112559190612dcd565b9350935093509350600060405180608001604052808581526020018481526020018381526020016040518061014001604052808860008151811061129b5761129b612d28565b60200260200101518152602001886001815181106112bb576112bb612d28565b60200260200101518152602001886002815181106112db576112db612d28565b60200260200101518152602001886003815181106112fb576112fb612d28565b602002602001015181526020018860048151811061131b5761131b612d28565b602002602001015181526020018860058151811061133b5761133b612d28565b602002602001015181526020018860068151811061135b5761135b612d28565b602002602001015181526020018860078151811061137b5761137b612d28565b602002602001015181526020018860088151811061139b5761139b612d28565b60200260200101518152602001886009815181106113bb576113bb612d28565b6020026020010151815250815250905060006113e2600080516020612f8883398151915290565b60048101549091506001600160a01b031680611411576040516301dcf1ab60e31b815260040160405180910390fd5b806001600160a01b031663f3bb70f684600001518560200151866040015187606001516040518563ffffffff1660e01b81526004016114539493929190612eaa565b602060405180830381865afa158015611470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114949190612f2f565b6114b15760405163b4b32e6f60e01b815260040160405180910390fd5b6114ba83611d71565b505050505050505050565b6114cd611b47565b6114d5611bec565b7fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749702819055604051818152600080516020612f88833981519152907ff007a02ba428e63fa98b65269e70f9a9db847e0a839049a2f31f06928226773490602001610a4c565b611541612341565b61156c6040518060800160405280600081526020016000815260200160008152602001600081525090565b611574611b23565b604051636ad1d8a760e11b815260048101919091526024810184905273__$068aad146bf104111ba65c4a1de2cd0e23$__9063d5a3b14e906044016108bd565b6115bc612341565b6115c4611b23565b604051620cf08960e41b815260048101919091526024810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__9062cf089090604401610aef565b61162660405180606001604052806000815260200160008152602001600081525090565b61162e611b23565b604051630b1a9cd360e01b815260048101919091526024810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__90630b1a9cd390604401606060405180830381865af4158015611686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c19190612d3e565b6116b2612341565b6116ba611b23565b6040516397ac539160e01b815260048101919091526024810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__906397ac539190604401610aef565b6000611704611b23565b609c0154919050565b6000611717611e19565b805490915060ff600160401b82041615906001600160401b031660008115801561173e5750825b90506000826001600160401b0316600114801561175a5750303b155b905081158015611768575080155b156117865760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156117b057845460ff60401b1916600160401b1785555b6001600160a01b0388166117d75760405163043103a360e21b815260040160405180910390fd5b6001600160a01b0387166117fe57604051637eb887b360e01b815260040160405180910390fd5b6118088787610c80565b61181133611e42565b600080516020612f888339815191528d81557fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa7497018b90557fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa7497028a90557fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa74970480546001600160a01b0319166001600160a01b038b161790556118af8d8d610e53565b5083156118f657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b61190d611b47565b611915611bec565b60008181527fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa7497066020526040902054600080516020612f888339815191529060ff16611973576040516327522baf60e01b815260040160405180910390fd5b600082815260068201602052604090819020805460ff19169055517fcc6269876e2c1958f569ca2e926ed364e2965636d111ad426270b6855f5a7e6a90610a4c9084815260200190565b60006119c7611b23565b604051631e75e7f360e01b8152600481019190915273__$068aad146bf104111ba65c4a1de2cd0e23$__90631e75e7f39060240161094a565b611a08612341565b611a10611b23565b604051630b2bcd1b60e11b815260048101919091526001600160401b03841660248201526044810183905273__$068aad146bf104111ba65c4a1de2cd0e23$__906316579a3690606401610b87565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610fb2565b611a90611bec565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255611ad4610f8d565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6000611b17611b23565b6002015460ff16919050565b7f3018a310c36c4f8228f09bf3b1822685cf0971daa8265a58ca807c4a4daba40090565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611bce57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611bc2600080516020612fa8833981519152546001600160a01b031690565b6001600160a01b031614155b15610f3e5760405163703e46dd60e11b815260040160405180910390fd5b33611bf5610f8d565b6001600160a01b031614610f3e5760405163118cdaa760e01b8152336004820152602401610f78565b611c26611b47565b610f8a611bec565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611c88575060408051601f3d908101601f19168201909252611c8591810190612cdb565b60015b611cb057604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610f78565b600080516020612fa88339815191528114611ce157604051632a87526960e21b815260048101829052602401610f78565b611ceb8383611e53565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f3e5760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610e1f82611ea9565b60608181015180516020820151604083015193830151608084015160a085015160c086015160e0870151610100880151610120909801519698959795969495939492939192909190611dca88888b8d888b8b8989611f1a565b60008981527fcb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa74970660205260409020805460ff19166001179055611e0c8888612096565b5050505050505050505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006109c1565b611e4a612151565b610f8a81612176565b611e5c826121a8565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611ea157611ceb828261220d565b610e1f612283565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080516020612f8883398151915260008a9003611f4b57604051634978c15760e11b815260040160405180910390fd5b88600003611f6c57604051639d34ba4f60e01b815260040160405180910390fd5b80548614611f8d5760405163d2cee05560e01b815260040160405180910390fd5b80600201548314611fb1576040516381d6039360e01b815260040160405180910390fd5b80600301548214611fd55760405163fe0c887b60e01b815260040160405180910390fd5b6000816001015486611fe79190612f4a565b905080851461201357604051633abb8c7960e11b81526004810182905260248101869052604401610f78565b4285116120335760405163b67a771360e01b815260040160405180910390fd5b600088815260058301602052604090205460ff16612064576040516356b6133160e11b815260040160405180910390fd5b600089815260068301602052604090205460ff1615611e0c57604051639338373760e01b815260040160405180910390fd5b61209e611b23565b6040516306fb157560e01b81526004810191909152602481018390526044810182905273__$068aad146bf104111ba65c4a1de2cd0e23$__906306fb15759060640160006040518083038186803b1580156120f857600080fd5b505af415801561210c573d6000803e3d6000fd5b50505050612118611b23565b60405163175ba3e960e11b8152600481019190915273__$068aad146bf104111ba65c4a1de2cd0e23$__90632eb747d290602401610ce9565b6121596122a2565b610f3e57604051631afcd79f60e31b815260040160405180910390fd5b61217e612151565b6001600160a01b038116610f8157604051631e4fbdf760e01b815260006004820152602401610f78565b806001600160a01b03163b6000036121de57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610f78565b600080516020612fa883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161222a9190612f6b565b600060405180830381855af49150503d8060008114612265576040519150601f19603f3d011682016040523d82523d6000602084013e61226a565b606091505b509150915061227a8583836122bc565b95945050505050565b3415610f3e5760405163b398979f60e01b815260040160405180910390fd5b60006122ac611e19565b54600160401b900460ff16919050565b6060826122d1576122cc82612318565b610bcc565b81511580156122e857506001600160a01b0384163b155b1561231157604051639996b31560e01b81526001600160a01b0385166004820152602401610f78565b5080610bcc565b8051156123285780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6040518061010001604052806000815260200160001515815260200160608152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60405180604001604052806123c06040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020016124116040518061010001604052806000815260200160001515815260200160608152602001600081526020016000815260200160001515815260200160008152602001600081525090565b905290565b80356001600160401b038116811461242d57600080fd5b919050565b60006020828403121561244457600080fd5b610bcc82612416565b805182526020808201511515818401526040808301516101009185018290528051918501829052600092019082906101208601905b808310156124a55783518252602082019150602084019350600183019250612482565b50606085015160608701526080850151608087015260a085015192506124cf60a087018415159052565b60c085015160c087015260e085015160e087015280935050505092915050565b60a08152600061250260a083018561244d565b9050610bcc6020830184805182526020810151602083015260408101516040830152606081015160608301525050565b60006020828403121561254457600080fd5b81356001600160e01b031981168114610bcc57600080fd5b60006020828403121561256e57600080fd5b5035919050565b6000806040838503121561258857600080fd5b8235915061259860208401612416565b90509250929050565b602081526125d4602082018351805182526020810151602083015260408101516040830152606081015160608301525050565b6000602083015160a080840152610a7b60c084018261244d565b602081526000610bcc602083018461244d565b6000806040838503121561261457600080fd5b50508035926020909101359150565b80356001600160a01b038116811461242d57600080fd5b80356001600160f01b03198116811461242d57600080fd5b6000806040838503121561266557600080fd5b61266e83612623565b91506125986020840161263a565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156126b4576126b461267c565b60405290565b60405161010081016001600160401b03811182821017156126b4576126b461267c565b604051601f8201601f191681016001600160401b03811182821017156127055761270561267c565b604052919050565b600082601f83011261271e57600080fd5b81356001600160401b038111156127375761273761267c565b61274a601f8201601f19166020016126dd565b81815284602083860101111561275f57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561278f57600080fd5b61279883612623565b915060208301356001600160401b038111156127b357600080fd5b6127bf8582860161270d565b9150509250929050565b60008083601f8401126127db57600080fd5b5081356001600160401b038111156127f257600080fd5b6020830191508360208260051b850101111561280d57600080fd5b9250929050565b6000806020838503121561282757600080fd5b82356001600160401b0381111561283d57600080fd5b612849858286016127c9565b90969095509350505050565b60008060006060848603121561286a57600080fd5b833592506020840135915061288160408501612416565b90509250925092565b60005b838110156128a557818101518382015260200161288d565b50506000910152565b60208152600082518060208401526128cd81604085016020870161288a565b601f01601f19169190910160400192915050565b60006001600160401b038211156128fa576128fa61267c565b5060051b60200190565b6000806040838503121561291757600080fd5b82356001600160401b0381111561292d57600080fd5b8301601f8101851361293e57600080fd5b803561295161294c826128e1565b6126dd565b8082825260208201915060208360051b85010192508783111561297357600080fd5b602084015b83811015612a2d5780356001600160401b0381111561299657600080fd5b85016060818b03601f190112156129ac57600080fd5b6129b4612692565b6129c060208301612416565b815260408201356001600160401b038111156129db57600080fd5b6129ea8c60208386010161270d565b60208301525060608201356001600160401b03811115612a0957600080fd5b612a188c60208386010161270d565b60408301525084525060209283019201612978565b50945050505060208301356001600160401b038111156127b357600080fd5b60008060008060008060008060e0898b031215612a6857600080fd5b8835975060208901356001600160401b03811115612a8557600080fd5b612a918b828c016127c9565b9098509650506040890135945060608901359350612ab160808a01612623565b9250612abf60a08a01612623565b9150612acd60c08a0161263a565b90509295985092959890939650565b60008060408385031215612aef57600080fd5b612af883612416565b946020939093013593505050565b600060208284031215612b1857600080fd5b610bcc82612623565b8051801515811461242d57600080fd5b600082601f830112612b4257600080fd5b8151612b5061294c826128e1565b8082825260208201915060208360051b860101925085831115612b7257600080fd5b602085015b83811015612b8f578051835260209283019201612b77565b5095945050505050565b60006101008284031215612bac57600080fd5b612bb46126ba565b825181529050612bc660208301612b21565b602082015260408201516001600160401b03811115612be457600080fd5b612bf084828501612b31565b6040830152506060828101519082015260808083015190820152612c1660a08301612b21565b60a082015260c0828101519082015260e09182015191810191909152919050565b60008082840360a0811215612c4b57600080fd5b83516001600160401b03811115612c6157600080fd5b612c6d86828701612b99565b9350506080601f1982011215612c8257600080fd5b50604051608081016001600160401b0381118282101715612ca557612ca561267c565b60409081526020858101518352858201519083015260608086015191830191909152608090940151938101939093525092909150565b600060208284031215612ced57600080fd5b5051919050565b600060208284031215612d0657600080fd5b81516001600160401b03811115612d1c57600080fd5b610a7b84828501612b99565b634e487b7160e01b600052603260045260246000fd5b60006060828403128015612d5157600080fd5b50612d5a612692565b82518152602080840151908201526040928301519281019290925250919050565b600082601f830112612d8c57600080fd5b612d9660406126dd565b806040840185811115612da857600080fd5b845b81811015612dc2578051845260209384019301612daa565b509095945050505050565b6000806000806101208587031215612de457600080fd5b84516001600160401b03811115612dfa57600080fd5b612e0687828801612b31565b945050612e168660208701612d7b565b925085607f860112612e2757600080fd5b6040612e32816126dd565b8060e0880189811115612e4457600080fd5b606089015b81811015612e6a57612e5b8b82612d7b565b84526020909301928401612e49565b50819550612e788a82612d7b565b94505050505092959194509250565b8060005b6002811015610f1c578151845260209384019390910190600101612e8b565b6102408101612eb98287612e87565b604082018560005b6002811015612eeb57612ed5838351612e87565b6040929092019160209190910190600101612ec1565b505050612efb60c0830185612e87565b61010082018360005b600a811015612f23578151835260209283019290910190600101612f04565b50505095945050505050565b600060208284031215612f4157600080fd5b610bcc82612b21565b808201808211156109c157634e487b7160e01b600052601160045260246000fd5b60008251612f7d81846020870161288a565b919091019291505056fecb4c32479afd0d9095322a3f93b16fa02cb0bf6c78456f30d0d6005caa749700360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220cd68bc3ea18def09cb45f25f100ab47dca9932a7adf5d0dd3361d9a54386797664736f6c634300081b0033",
  "linkReferences": {
    "@iden3/contracts/lib/IdentityLib.sol": {
      "IdentityLib": [
        {
          "length": 20,
          "start": 2460
        },
        {
          "length": 20,
          "start": 2601
        },
        {
          "length": 20,
          "start": 3022
        },
        {
          "length": 20,
          "start": 3174
        },
        {
          "length": 20,
          "start": 3333
        },
        {
          "length": 20,
          "start": 3419
        },
        {
          "length": 20,
          "start": 3528
        },
        {
          "length": 20,
          "start": 3699
        },
        {
          "length": 20,
          "start": 4432
        },
        {
          "length": 20,
          "start": 4627
        },
        {
          "length": 20,
          "start": 5775
        },
        {
          "length": 20,
          "start": 5854
        },
        {
          "length": 20,
          "start": 5961
        },
        {
          "length": 20,
          "start": 6101
        },
        {
          "length": 20,
          "start": 6875
        },
        {
          "length": 20,
          "start": 6970
        },
        {
          "length": 20,
          "start": 8640
        },
        {
          "length": 20,
          "start": 8748
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "@iden3/contracts/lib/IdentityLib.sol": {
      "IdentityLib": [
        {
          "length": 20,
          "start": 2207
        },
        {
          "length": 20,
          "start": 2348
        },
        {
          "length": 20,
          "start": 2769
        },
        {
          "length": 20,
          "start": 2921
        },
        {
          "length": 20,
          "start": 3080
        },
        {
          "length": 20,
          "start": 3166
        },
        {
          "length": 20,
          "start": 3275
        },
        {
          "length": 20,
          "start": 3446
        },
        {
          "length": 20,
          "start": 4179
        },
        {
          "length": 20,
          "start": 4374
        },
        {
          "length": 20,
          "start": 5522
        },
        {
          "length": 20,
          "start": 5601
        },
        {
          "length": 20,
          "start": 5708
        },
        {
          "length": 20,
          "start": 5848
        },
        {
          "length": 20,
          "start": 6622
        },
        {
          "length": 20,
          "start": 6717
        },
        {
          "length": 20,
          "start": 8387
        },
        {
          "length": 20,
          "start": 8495
        }
      ]
    }
  }
}